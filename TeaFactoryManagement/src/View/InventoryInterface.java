/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.InventoryController;
import Model.Inventory;
import com.toedter.calendar.JDateChooser;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author KESTROY
 */
public class InventoryInterface extends javax.swing.JFrame {
      private InventoryController controller;

    /**
     * Creates new form NewJFrame
     */
    public InventoryInterface() throws SQLException {
        initComponents();
        controller = new InventoryController(this);
        loadInventoryData();
    }
    
    

     private void loadInventoryData() {
        try {
            List<Inventory> Inventories = controller.getAllInventories();
            DefaultTableModel model = (DefaultTableModel) InventoryTable.getModel();
            model.setRowCount(0);
            for (Inventory inventory : Inventories) {
                model.addRow(new Object[]{
                    inventory.getId(),
                    inventory.getProductId(),
                    inventory.getSupplier(),
                    inventory.getQuantity(),
                    inventory.getPurchaseDate()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error loading product data!");
        }
    }

    private void clearFields() {
        productidTF.setText("");
        supplierTF.setText("");
        quantityTF.setText("");
        purchasedateTF = new JDateChooser();
        purchasedateTF.setDate(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        productidTF = new javax.swing.JTextField();
        supplierTF = new javax.swing.JTextField();
        quantityTF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        InventoryTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        addBTN = new javax.swing.JButton();
        View = new javax.swing.JButton();
        updateBTN = new javax.swing.JButton();
        DeleteBTN = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        Close = new javax.swing.JButton();
        add = new javax.swing.JButton();
        updateBTN2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        purchasedateTF = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/backg.jpg"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(193, 10));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Product ID");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 150, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Supplier");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 199, -1, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Purchased Date");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 298, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Quantity");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 249, -1, -1));

        productidTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(productidTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 150, 160, -1));

        supplierTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        supplierTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierTFActionPerformed(evt);
            }
        });
        getContentPane().add(supplierTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 200, 160, -1));

        quantityTF.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(quantityTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 250, 160, -1));

        InventoryTable.setAutoCreateRowSorter(true);
        InventoryTable.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        InventoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inventory ID", "Product ID", "Supplier", "Quantity", "Purchase Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        InventoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                InventoryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(InventoryTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 910, 180));

        jPanel1.setBackground(new java.awt.Color(255, 153, 204));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        addBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        addBTN.setForeground(new java.awt.Color(0, 0, 102));
        addBTN.setText("Add");
        addBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTNActionPerformed(evt);
            }
        });

        View.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        View.setForeground(new java.awt.Color(0, 0, 102));
        View.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-view-30.png"))); // NOI18N
        View.setText("View");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        updateBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updateBTN.setForeground(new java.awt.Color(0, 0, 102));
        updateBTN.setText("Update");
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        DeleteBTN.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DeleteBTN.setForeground(new java.awt.Color(0, 0, 102));
        DeleteBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-delete-30.png"))); // NOI18N
        DeleteBTN.setText("Delete");
        DeleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBTNActionPerformed(evt);
            }
        });

        Clear.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Clear.setForeground(new java.awt.Color(0, 0, 102));
        Clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-clear-30.png"))); // NOI18N
        Clear.setText("Clear");
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        Close.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Close.setForeground(new java.awt.Color(0, 0, 102));
        Close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-exit-30.png"))); // NOI18N
        Close.setText("Exit");
        Close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseActionPerformed(evt);
            }
        });

        add.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        add.setForeground(new java.awt.Color(0, 0, 102));
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-add-30.png"))); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        updateBTN2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        updateBTN2.setForeground(new java.awt.Color(0, 0, 102));
        updateBTN2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/icons8-update-30.png"))); // NOI18N
        updateBTN2.setText("Update");
        updateBTN2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTN2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(1135, 1135, 1135)
                        .addComponent(addBTN))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(View, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateBTN2))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(DeleteBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Close, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(Clear, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE))))
                        .addGap(880, 880, 880)
                        .addComponent(updateBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add)
                    .addComponent(DeleteBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Clear)
                    .addComponent(View))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Close)
                    .addComponent(updateBTN2))
                .addGap(105, 105, 105))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(addBTN))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(updateBTN)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 140, 370, 180));

        jLabel7.setFont(new java.awt.Font("Algerian", 1, 36)); // NOI18N
        jLabel7.setText("Inventory  Details");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, -1, -1));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 970, 10));
        getContentPane().add(purchasedateTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(205, 300, 160, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/backg.jpg"))); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void InventoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_InventoryTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = InventoryTable.getSelectedRow();
        productidTF.setText(InventoryTable.getValueAt(selectedRow, 1).toString());
        supplierTF.setText(InventoryTable.getValueAt(selectedRow, 2).toString());
        quantityTF.setText(InventoryTable.getValueAt(selectedRow, 3).toString());
       try {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
        String dateString = InventoryTable.getValueAt(selectedRow, 4).toString();
        java.util.Date date = dateFormat.parse(dateString);
        purchasedateTF.setDate(date);
    } catch (Exception e) {
        e.printStackTrace();
        purchasedateTF.setDate(null); // set to null if date conversion fails
    }
    }//GEN-LAST:event_InventoryTableMouseClicked

    private void addBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTNActionPerformed
        // TODO add your handling code here:
    Inventory inventory = new Inventory();
    inventory.setProductId(productidTF.getText());
    inventory.setSupplier(supplierTF.getText());
    inventory.setQuantity(Integer.parseInt(quantityTF.getText()));
    
    SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
    String purchaseDate = dFormat.format(purchasedateTF.getDate());
    inventory.setPurchaseDate(purchaseDate);

    try {
        controller.addInventory(inventory);
        loadInventoryData();
        clearFields();
        JOptionPane.showMessageDialog(this, "Inventory added successfully!");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error adding Inventory!");
    }
    }//GEN-LAST:event_addBTNActionPerformed

    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
        // TODO add your handling code here:
        try {
            int selectedRow = InventoryTable.getSelectedRow();
            if (selectedRow != -1) {
                String details = "Inventory Details:\n";
                details += "Product ID: " + InventoryTable.getValueAt(selectedRow, 1).toString() + "\n";
                details += "Supplier: " + InventoryTable.getValueAt(selectedRow, 2).toString() + "\n";
                details += "Quantity: " + InventoryTable.getValueAt(selectedRow, 3).toString() + "\n";
                details += "Date: " + InventoryTable.getValueAt(selectedRow, 4).toString();
                JOptionPane.showMessageDialog(this, details, "Inventory Details", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Please select a Inventory to view!");
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error viewing inventory!");
        }
    }//GEN-LAST:event_ViewActionPerformed

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        // TODO add your handling code here:
        int selectedRow = InventoryTable.getSelectedRow();
    if (selectedRow != -1) {
        Inventory inventory = new Inventory();
        inventory.setId((int) InventoryTable.getValueAt(selectedRow, 0));
        inventory.setProductId(productidTF.getText());
        inventory.setSupplier(supplierTF.getText());
        inventory.setQuantity(Integer.parseInt(quantityTF.getText()));
        
        SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
        String purchaseDate = dFormat.format(purchasedateTF.getDate());
        inventory.setPurchaseDate(purchaseDate);

        try {
            controller.updateInventory(inventory);
            loadInventoryData();
            clearFields();
            JOptionPane.showMessageDialog(this, "Inventory updated successfully!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error updating inventory!");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select an inventory to update!");
    }
    }//GEN-LAST:event_updateBTNActionPerformed

    private void DeleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBTNActionPerformed
        // TODO add your handling code here:
        int selectedRow = InventoryTable.getSelectedRow();
        if (selectedRow != -1) {
            int id = (int) InventoryTable.getValueAt(selectedRow, 0);
            try {
                controller.deleteInventory(id);
                loadInventoryData();
                clearFields();
                JOptionPane.showMessageDialog(this, "Inventory deleted successfully!");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error deleting Inventory!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a Inventory to delete!");
        }

    }//GEN-LAST:event_DeleteBTNActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // TODO add your handling code here:
        clearFields();
    }//GEN-LAST:event_ClearActionPerformed

    private void supplierTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierTFActionPerformed

    private void CloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseActionPerformed
        // TODO add your handling code here:
          setVisible(false);
    }//GEN-LAST:event_CloseActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
    Inventory inventory = new Inventory();
    inventory.setProductId(productidTF.getText());
    inventory.setSupplier(supplierTF.getText());
    inventory.setQuantity(Integer.parseInt(quantityTF.getText()));
    
    SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
    String purchaseDate = dFormat.format(purchasedateTF.getDate());
    inventory.setPurchaseDate(purchaseDate);

    try {
        controller.addInventory(inventory);
        loadInventoryData();
        clearFields();
        JOptionPane.showMessageDialog(this, "Inventory added successfully!");
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error adding Inventory!");
    }
    }//GEN-LAST:event_addActionPerformed

    private void updateBTN2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTN2ActionPerformed
        // TODO add your handling code here:
        int selectedRow = InventoryTable.getSelectedRow();
        if (selectedRow != -1) {
            Inventory inventory = new Inventory();
            inventory.setId((int) InventoryTable.getValueAt(selectedRow, 0));
            inventory.setProductId(productidTF.getText());
            inventory.setSupplier(supplierTF.getText());
            inventory.setQuantity(Integer.parseInt(quantityTF.getText()));
           
            SimpleDateFormat dFormat = new SimpleDateFormat("dd-MM-yyyy");
            String purchaseDate = dFormat.format(purchasedateTF.getDate());
            inventory.setPurchaseDate(purchaseDate);

            try {
                controller.updateInventory(inventory);
                loadInventoryData();
                clearFields();
                JOptionPane.showMessageDialog(this, "Inventory updated successfully!");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error updating Inventory!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a Inventory to update!");
        }
    }//GEN-LAST:event_updateBTN2ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Ensure GUI is created on the Event Dispatch Thread
         java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new InventoryInterface().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(InventoryInterface.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Clear;
    private javax.swing.JButton Close;
    private javax.swing.JButton DeleteBTN;
    private javax.swing.JTable InventoryTable;
    private javax.swing.JButton View;
    private javax.swing.JButton add;
    private javax.swing.JButton addBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField productidTF;
    private com.toedter.calendar.JDateChooser purchasedateTF;
    private javax.swing.JTextField quantityTF;
    private javax.swing.JTextField supplierTF;
    private javax.swing.JButton updateBTN;
    private javax.swing.JButton updateBTN2;
    // End of variables declaration//GEN-END:variables
}
